---
# Source: ama-metrics/templates/ama-metrics-serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ama-metrics-serviceaccount-ccp
  namespace: 64e2885768085f00014f461c
---
# Source: ama-metrics/templates/ama-metrics-prometheus-config-configmap.yaml
kind: ConfigMap
apiVersion: v1
data:
  prometheus-config: |-
    scrape_configs:
    - job_name: cluster-autoscaler
      follow_redirects: false
      sample_limit: 200
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - 64e2885768085f00014f461c
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_name]
        action: keep
        regex: cluster-autoscaler;cluster-autoscaler
      - source_labels: [__meta_kubernetes_pod_annotation_aks_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_aks_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_aks_prometheus_io_port]
        action: replace
        separator: ":"
        target_label: __address__
      - source_labels: [__meta_kubernetes_pod_name]
        regex: (.*)
        target_label: pod
        action: replace
      metric_relabel_configs:
      - source_labels: [__name__]
        regex: rest_client_requests_total|cluster_autoscaler_((last_activity|cluster_safe_to_autoscale|failed_scale_ups_total|scale_down_in_cooldown|scaled_up_nodes_total|unneeded_nodes_count|unschedulable_pods_count|nodes_count))|cloudprovider_azure_api_request_(errors|duration_seconds_(bucket|count))
        action: keep
    - job_name: kube-controller-manager
      sample_limit: 300
      follow_redirects: false
      scheme: https
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - 64e2885768085f00014f461c
      tls_config:
        ca_file: /etc/kubernetes/secrets/ca.pem
        cert_file: /etc/kubernetes/secrets/client.pem
        key_file: /etc/kubernetes/secrets/client-key.pem
        insecure_skip_verify: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_k8s_app, __meta_kubernetes_pod_container_name]
        action: keep
        regex: kube-controller-manager;kube-controller-manager
      - source_labels: [__meta_kubernetes_pod_annotation_aks_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_aks_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_aks_prometheus_io_port]
        action: replace
        separator: ":"
        target_label: __address__
      - source_labels: [__meta_kubernetes_pod_name]
        regex: (.*)
        target_label: pod
        action: replace
      metric_relabel_configs:
      - source_labels: [__name__]
        action: keep
        regex: rest_client_requests_duration_seconds_bucket|rest_client_requests_total|workqueue_depth|node_collector_evictions_total
    - job_name: kube-scheduler
      sample_limit: 100
      follow_redirects: false
      scheme: https
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - 64e2885768085f00014f461c
      tls_config:
        ca_file: /etc/kubernetes/secrets/ca.pem
        cert_file: /etc/kubernetes/secrets/client.pem
        key_file: /etc/kubernetes/secrets/client-key.pem
        insecure_skip_verify: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_k8s_app, __meta_kubernetes_pod_container_name]
        action: keep
        regex: kube-scheduler;kube-scheduler
      - source_labels: [__meta_kubernetes_pod_annotation_aks_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_aks_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_aks_prometheus_io_port]
        action: replace
        separator: ":"
        target_label: __address__
      - source_labels: [__meta_kubernetes_pod_name]
        regex: (.*)
        target_label: pod
        action: replace
      metric_relabel_configs:
      - source_labels: [__name__]
        action: keep
        regex: scheduler_pending_pods|scheduler_unschedulable_pods|scheduler_pod_scheduling_attempts|scheduler_queue_incoming_pods_total|scheduler_preemption_attempts_total|scheduler_preemption_victims|scheduler_scheduling_attempt_duration_seconds|Scheduler_schedule_attempts_total|scheduler_pod_scheduling_duration_seconds 
    - job_name: etcd
      sample_limit: 1000
      follow_redirects: false
      scheme: https
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - 64e2885768085f00014f461c
      tls_config:
        ca_file: /etc/kubernetes/secrets/etcd-client-ca.crt
        cert_file: /etc/kubernetes/secrets/etcd-client.crt
        key_file: /etc/kubernetes/secrets/etcd-client.key
        insecure_skip_verify: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_pod_container_port_number]
        action: keep
        regex: etcd;2379
      - source_labels: [__meta_kubernetes_pod_name]
        regex: (.*)
        target_label: pod
        action: replace
      metric_relabel_configs:
      - source_labels: [__name__]
        action: keep
        regex: etcd_memory_in_bytes|etcd_cpu_in_cores|etcd_db_limit_in_bytes|etcd_db_max_size_in_bytes|etcd_db_fragmentation_rate|etcd_db_total_object_count|etcd_db_top_N_object_counts_by_type|etcd_db_top_N_object_size_by_type|etcd2_enabled
    - job_name: kube-apiserver
      scrape_interval: 30s
      label_limit: 63
      label_name_length_limit: 511
      label_value_length_limit: 1023
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - 64e2885768085f00014f461c
      scheme: https
      tls_config:
        ca_file: /etc/kubernetes/secrets/ca.pem
        insecure_skip_verify: true
      bearer_token_file: /etc/kubernetes/secrets/token
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_k8s_app
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: kube-apiserver;kube-apiserver
      metric_relabel_configs:
      - source_labels:
        - __name__
        action: keep
        regex: "|apiserver_request_total|apiserver_cache_list_fetched_objects_total|apiserver_cache_list_returned_objects_total|apiserver_flowcontrol_demand_seats_average|apiserver_flowcontrol_current_limit_seats|apiserver_flowcontrol_rejected_requests_total|apiserver_request_sli_duration_seconds|process_start_time_seconds|apiserver_request_duration_seconds|apiserver_storage_fetched_objects_total|apiserver_storage_list_returned_objects_total|apiserver_current_inflight_requests"   
metadata:
  name: ama-metrics-prometheus-config
  namespace: 64e2885768085f00014f461c
---
# Source: ama-metrics/templates/ama-metrics-settings-configmap.yaml
apiVersion: v1
kind: ConfigMap
data:
  schema-version:
    v1
  config-version:
    ver1
  prometheus-collector-settings: |-
    default_metric_account_name = "default"
    cluster_alias = ""
  default-scrape-settings-enabled: |-
    kubelet = true
    coredns = true
    cadvisor = true
    kubeproxy = true
    kubestate = true
    nodeexporter = true
    prometheuscollectorhealth = true
    windowsexporter = false
    windowskubeproxy = false
  default-targets-metrics-keep-list: |-
    kubelet = ""
    coredns = ""
    cadvisor = ""
    kubeproxy = ""
    kubestate = ""
    nodeexporter = ""
    windowsexporter = ""
    windowskubeproxy = ""
  debug-mode: |-
    enabled = false
  default-targets-scrape-interval-settings: |-
    kubelet = "30s"
    coredns = "30s"
    cadvisor = "30s"
    kubeproxy = "30s"
    kubestate = "30s"
    nodeexporter = "30s"
    prometheuscollectorhealth = "30s"
    windowsexporter = "30s"
    windowskubeproxy = "30s"
metadata:
  name: ama-metrics-settings-configmap-ccp
  namespace: 64e2885768085f00014f461c
---
# Source: ama-metrics/templates/ama-metrics-clusterRole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ama-metrics-reader-ccp
rules:
  - apiGroups: [""]
    resources:
      [
        "pods",
        "nodes",
        "nodes/stats",
        "nodes/metrics",
        "nodes/proxy",
        "namespaces",
        "services",
        "endpoints",
        "ingress"
      ]
    verbs: ["list", "get", "watch"]
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["aad-msi-auth-token"]
    verbs: ["get", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
  - apiGroups: ["clusterconfig.azure.com"]
    resources: ["azureclusteridentityrequests", "azureclusteridentityrequests/status"]
    verbs: ["get", "update", "list", "create"]
---
# Source: ama-metrics/templates/ama-metrics-clusterRoleBinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ama-metrics-clusterrolebinding-ccp
subjects:
  - kind: ServiceAccount
    name: ama-metrics-serviceaccount-ccp
    namespace: 64e2885768085f00014f461c
roleRef:
  kind: ClusterRole
  name: ama-metrics-reader-ccp
  apiGroup: rbac.authorization.k8s.io
---
# Source: ama-metrics/templates/ama-metrics-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ama-metrics
  namespace: 64e2885768085f00014f461c
  labels:
    component: ama-metrics
spec:
  replicas: 1
  revisionHistoryLimit: 2
  paused: false
  selector:
    matchLabels:
      rsName: ama-metrics
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        rsName: ama-metrics
        kubernetes.azure.com/managedby: aks
        overlaymgr-ignore: "true"
      annotations:
        agentVersion: "0.0.0.1"
        schema-versions: "v1"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: ama-metrics-serviceaccount-ccp
      containers:
        - name: prometheus-collector
          image: "ninaccpmetrics.azurecr.io/prometheus-collector:6.7.0-main-26-07-2023-35"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1
              memory: 500Mi
            requests:
              cpu: 150m
              memory: 250Mi
          env:
            - name: CLUSTER
              value: "/subscriptions/18153b17-4e27-4b58-863e-f8105b8892a2/resourcegroups/standalone-230820ob1hxw/providers/Microsoft.ContainerService/managedClusters/standalone-230820ob1hxw-cx-1"
            - name: AKSREGION
              value: "eastus"
            - name: MAC
              value: "true"
            - name: CCP_METRICS_ENABLED
              value: "true"
            - name: AZMON_COLLECT_ENV
              value: "false"
            - name: customEnvironment
              value: "azurepubliccloud"
            - name: OMS_TLD
              value: "opinsights.azure.com"
            - name: CONTROLLER_TYPE
              value: "ReplicaSet"
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONTAINER_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: prometheus-collector
                  resource: limits.cpu
                  divisor: 1m
            - name: CONTAINER_MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: prometheus-collector
                  resource: limits.memory
                  divisor: 1Mi
            - name: NODE_EXPORTER_NAME
              value: "" # Replace this with the node exporter shipped out of box with AKS
            - name: NODE_EXPORTER_TARGETPORT
              value: "19100"
            - name: NODE_EXPORTER_VERSION
              value: "v1.5.0" # Replace this with the version shipped by default
            - name: AGENT_VERSION
              value: 6.7.0-main-05-04-2023-4450ad10
            - name: MODE
              value: "advanced" # only supported mode is 'advanced', any other value will be the default/non-advance mode
            - name: WINMODE
              value: "" # WINDOWS: only supported mode is 'advanced', any other value will be the default/non-advance mode
            - name: MINIMAL_INGESTION_PROFILE
              value: "true" # only supported value is the string "true"
          securityContext:
            privileged: false
          volumeMounts:
            - mountPath: /etc/config/settings
              name: settings-vol-config
              readOnly: true
            - mountPath: /etc/config/settings/prometheus
              name: prometheus-config-vol
              readOnly: true
            - name: host-log-containers
              readOnly: true
              mountPath: /var/log/containers
            - name: host-log-pods
              readOnly: true
              mountPath: /var/log/pods
            - mountPath: /anchors/mariner
              name: anchors-mariner
              readOnly: true
            - mountPath: /anchors/ubuntu
              name: anchors-ubuntu
              readOnly: true
            - mountPath: /etc/kubernetes/secrets
              name: kubernetes-secrets
              readOnly: true
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - /opt/microsoft/liveness/livenessprobe.sh
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
        - name: addon-token-adapter
          command:
            - /addon-token-adapter
          args:
            - --secret-namespace=kube-system
            - --secret-name=aad-msi-auth-token
            - --token-server-listening-port=7777
            - --health-server-listening-port=9999
          image: "mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: AZMON_COLLECT_ENV
              value: "false"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9999
            initialDelaySeconds: 10
            periodSeconds: 60
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_ADMIN
                - NET_RAW
      affinity:
        nodeAffinity:
          # affinity to schedule on to ephemeral os node if its available
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: In
                    values:
                      - system
            - weight: 50
              preference:
                matchExpressions:
                  - key: azuremonitor/metrics.replica.preferred
                    operator: In
                    values:
                      - "true"
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
                  - key: kubernetes.azure.com/cluster
                    operator: Exists
      volumes:
        - name: settings-vol-config
          configMap:
            name: ama-metrics-settings-configmap-ccp
            optional: true
        - name: prometheus-config-vol
          configMap:
            name: ama-metrics-prometheus-config
            optional: true
        - name: host-log-containers
          hostPath:
            path: /var/log/containers
        - name: host-log-pods
          hostPath:
            path: /var/log/pods
        - name: anchors-mariner
          hostPath:
            path: /etc/pki/ca-trust/anchors/
            type: DirectoryOrCreate
        - name: anchors-ubuntu
          hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
        - name: kubernetes-secrets
          projected:
            defaultMode: 420
            sources:
              - secret:
                  name: kube-apiserver-ssl
              - secret:
                  name: kube-apiserver-token
              - secret:
                  name: etcd-client-tls
